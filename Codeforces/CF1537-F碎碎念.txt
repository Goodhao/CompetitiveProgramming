就是一张图，每次可以把一条边的两个点权值加上k（可以是负数）
把图原先权值变为目标权值，判断是否可能

n,m<=2*10^5, 且n-1<=m<=n(n-1)/2

感觉就是解个方程组
设k1,...,km系数

列出n个等式
判断是否有解

但是高斯消元法也太暴力了

图有图的结构

只有一条边，那么这两个点的差永远不会变，反过来只要目标权重的两点差与一开始的两点差一样就一定有解

A-B-C，三个点，两条边

感觉B会被加上两种k，k1,k2，似乎自由度比较大

从自由度小的点入手，比如A，为了让它变为目标权重，在A-B边上的k是被唯一确定的，C也同理
然后只要检查B即可

树 vs 环
树：有叶子节点，叶子边k确定，确定后删点，形成新的叶子边，不断迭代，确定所有边k，然后检查根的目标权重是否一致即可

环：A-B-C-A，对边k列方程，3个未知数k，3个点（3个方程），而且显然基底都是线性无关的，必定有解

对于点p，它的邻解边集合设为e(p)，那么除非这张图只有A-B
否则任意两点p,q，都有e(p)!=e(q)
因此列出的n*m方程组，行秩一定是满的，也就是n

前面说m>=n-1,我们可以分为m>=n,和m=n-1（树）
行秩是满的，且m>=n，似乎一定有解或者有无穷多个解

复习一下线性代数，确认一下。。

似乎是真的

那么，只需要处理m=n-1的情况，不断删点，只剩下根为止

还是欠考虑了，否则任意两点p,q，都有e(p)!=e(q)
不能推出列出的n*m方程组，行秩一定是满的
（但反过来如果有e(p)==e(q)，行秩一定不满）

这个n*m的矩阵是个稀疏矩阵，因为非零元（1）最多2m个，而且这个矩阵的非零元都是1

这个矩阵每一列最多两个非零元

对于一个环来说，如果是偶数边的环（偶数环），那么它如果有解必定有无穷多解，只要相邻边一个+d一个-d即可，如果是奇数环，要么无解，要么唯一解

如果是基环树，树的部分可以不断缩点，变为环处理

如果是两个环分享一个公共边...

既然都讨论到这里了，恐怕能想的方向就是双连通分量

给一个环多加一条边，能确保排除无穷多解的情况吗？

还是要快速跑出之前的思维圈

总体分析还不如构造试探

感觉可以把操作给改造成一个等价的操作

对于一条边，给相邻两点都加上一个增量d，我们可以把一个点设置为负点
这样，就变成给点a+=d，给点b的负点-=d，总之，相邻边上的两个点，一个+另一个就-
这样我们就可以从流量守恒的角度看问题

如果图可以二染色，那么我们的确可以这样改造图和操作
否则，必然存在一个点既是正点又是负点，也就是说，能给它加上的增量为0
如果此时它的初始值与目标值不相等，那么这张图就不可能调整成功

沿着这个思路走下去

1.图可以二染色


2.图不可以二染色

当我们用dfs进行二染色的时候，如果发现一个点既是正点又是负点，
检查初始值与目标值是否一致，
	不一致，输出NO
	一致，那么我们可以从图中删除这个点以及邻边
		不对，邻边不能贸然删除，应该说我们可以把它的邻点都视为一个等价类缩点
			只要让新点的目标值为邻点目标值之和，原始值为原始值之和，即可
				因为邻点之间的数字可以通过这个中心点任意分配，且不损失

那我们的算法顺序可以改一下，不需要在dfs二染色的过程中缩点，而是，直接把所有初始值与目标值一样的点，删点，缩其邻点，不断重复，直到新图每个点的目标值与原始值都不一样

注：这个过程应该可以做到O(N+M)的，每次不需要从头检查，新的目标值=原值的点一定是缩点产生的，而缩点总次数不超过O(N)

然后dfs二染色
	如果不可以二染色，直接输出NO
	如果可以二染色，变为二分图

好像这个思路出了严重的问题，那就是整张图的总权重并不是守恒的，操作完全可以增量总权重
而我以为权重是守恒的，即使是守恒的，正点负点也只能相对于一条边谈论，不是绝对的。

还是去check一下题解了

原来我的想法并不是完全错，可以说三个想法：缩点、二分图、等价类中流量任意分配
对了后面两个
注意是我想的时候是把后面的观点作为前面的观点的自然延伸来想的，一旦认为其中一个有问题，我也就把这三个捆在一起放弃了
但是做题杀个回马枪是很有必要的

比如等价类中的流量任意分配，其实二分图中，A中一个点p所连的所有B中的点，都可以通过p来实现总权重不变的情况下权重在彼此之间任意分配，而图是联通的，因此整张图，如果是二分图的话，那么
A组的点一定可以在A组点中任意分配，B组的点一定可以在B组点中任意分配
（二分图的话，同组内点的路径长度总是奇数，这保证了++--++--首尾相消后是同组一个点+，另一个点-，其余点不变）
如果A组点的总初始值=总目标值，B组点的总初始值=总目标值
那么就一定有解
如果总初始值!=总目标值呢？
别慌，我们可以任意分配流量，但这只是一个子操作，原来的操作还可以实现更多效果
比如使得总流量增加，当然，因为是二分图，要加的话，A组和B组会同时加，因此
有解条件就等价于A的总初始值-A的总目标值==B的总初始值-B的总目标值，否则无解

二分图处理完了，对于非二分图，完全可以在二分图的骨架上研究
如果二分图骨架是有解的，那么多一些边的非二分图，显然也有解（那些边可以不操作）
如果二分图骨架是无解的，那么说明A的总初始值-总目标值!=B的总初始值-总目标值，但是我们总是可以通过一条A组的内边（或者B组的内边），来单独增加一个组的总权重，使得条件成立，于是非二分图必定有解