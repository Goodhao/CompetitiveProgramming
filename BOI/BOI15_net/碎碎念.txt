假如原图是一条链，那么我们只需要添加一条边形成环就可以
假如原图是
       /
----
       \

我们只要添加2条边构成两个环就行
1条边是不可行的，因为1条边最多把树上一个路径变成环，如果还有点不在任意环中，那么删除
它的某条边就会导致图的分离，而这张图不能用一条路径覆盖住，所以添加1条边不行。

假如原图是由一个根节点和它的若干个子节点组成的树
儿子数为n-1
对于叶子节点，如果我们不把边添加到它的一端，则我们删除这个叶子与父亲的边就会导致连通分量的增加
所以我们一定要使每个叶子节点都有一条新边添加到，一条新边最多满足两个叶子结点的要求。
所以我们的新边数m>=上取整(n-1)/2

是否m=上取整(n-1)/2 就可行了？

我们最终的图只要满足任意一条边都在某个环中就行了
对于不连接叶子的边，我们找出一个叶子使得这个叶子到根的路径上经过这条边（一定存在这样的叶子）
然后对于这个叶子通过新边所相连的另一个叶子，把另一个叶子到根的路径与之前的路径合并形成一条两端点都是叶子的路径
并且这两个端点还被新边直接相连，所以构成了环，因此满足条件。

所以我们的算法就是找出一个度数不为1的点作为根，然后求出叶子个数计算m

一个情况就是所有点的度数都为1，这样的话是n=2的情况，特殊处理，m=1

推理有一个问题，就是可能叶子A和与它直接连的叶子B，它们的lca是低于我们的边的
这样的话就不是一条简单路

按照dfsn顺序，每个叶子连与它序号差为floor(cnt/2)的叶子
这样直觉上可以平衡一下lca，让每个点对lca尽可能靠近根
结果AC了



本题怎么对拍呢？
不知道怎么对拍，自信提交，结果就错了